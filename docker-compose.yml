version: "3.8"

services:
  deunhealth:
    image: qmcgaw/deunhealth
    container_name: deunhealth
    network_mode: "none"
    environment:
      TZ: ${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    environment:
      TZ: ${TZ}
      WATCHTOWER_SCHEDULE: 0 0 4 * * *
      WATCHTOWER_CLEANUP: "true"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      deunhealth.restart.on.unhealthy: "true"
    restart: unless-stopped

  openspeedtest:
    image: openspeedtest/latest
    container_name: openspeedtest
    ports:
      - "6000:3000"
      - "6001:3001"
    labels:
      deunhealth.restart.on.unhealthy: "true"
    restart: unless-stopped

  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: uptime-kuma
    ports:
      - "3001:3001"
    environment:
      TZ: ${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /volume2/docker/data/uptime-kuma/data:/app/data
    labels:
      deunhealth.restart.on.unhealthy: "true"
    restart: unless-stopped

  dockge:
    image: louislam/dockge:latest
    container_name: dockge
    ports:
      - "5001:5001"
    environment:
      TZ: ${TZ}
      DOCKGE_STACKS_DIR: /volume2/docker/stacks
      DOCKGE_ENABLE_CONSOLE: "true"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /volume2/docker/data/dockge/data:/app/data
      - /volume2/docker/stacks:/volume2/docker/stacks
    labels:
      deunhealth.restart.on.unhealthy: "true"
    restart: unless-stopped

  cloudflare-ddns:
    image: favonia/cloudflare-ddns:latest
    container_name: cloudflare-ddns
    environment:
      CLOUDFLARE_API_TOKEN: ${API_TOKEN}
      DOMAINS: ${DOMAINS}
      IP6_PROVIDER: none
    read_only: true
    security_opt: [ no-new-privileges:true ]
    cap_drop: [ ALL ]
    labels:
      deunhealth.restart.on.unhealthy: "true"
    restart: unless-stopped

  duplicati:
    image: lscr.io/linuxserver/duplicati:latest
    container_name: duplicati
    ports:
      - "8200:8200"
    environment:
      TZ: ${TZ}
      PUID: ${PUID}
      PGID: ${PGID}
      SETTINGS_ENCRYPTION_KEY: ${SETTINGS_ENCRYPTION_KEY}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /volume2/docker/data/duplicati/config:/config
      - /volume2/docker:/source/docker
      - /mnt/@usb/sdc1/backups:/backups
    restart: unless-stopped
